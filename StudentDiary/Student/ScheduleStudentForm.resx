<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSchedule.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA0gAAAB2CAYAAADyf7ObAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAB/pSURBVHhe7Z0Lle26sUUvhVAIhVAIhVAIhUchFEIhFEIh
        FEIhFO5b1bfdR1uWZH1K/mmuMeYZp7Vtb3/0qSqVtX/7/fffAQAAAAAAQCQLAQAAAAAAViRZCAAAAAAA
        sCLJQgAAAAAAgBVJFgIAAAAAAKxIshAAAAAAAGBFkoUAAAAAAAArkiwEAAAAAABYkWQhAAAAAADAiiQL
        AQAAAAAAViRZCAAAAAAAsCLJQgAAAAAAgBVJFgIAAAAAAKxIshAAAAAAAGBFkoUAOaT/++Y/wgpy/E9s
        236ROl4O6c/Bvnasf4k/pbaFe/H9zOx5hfXB+Lewz/6c2u8Kvs/HoD4DVPJdjx/RxgEAejD9RcSd3FX8
        QzQbH2eynZ+wc43PP+a/Ytv+ttd0hPR3YQNffH1n83UPpZp7/3T+8n2tVnfiz0YxA/3v4TP2QGp5Llaf
        vq7xbKRb1edZ2PG/uXVfJZnzaN8fn5Mn/0x9dwppRpuLsTZIG4+QZteD2Tx2nAeAT/74Jx0JugMW1bXB
        47JIq2QOpJ2DDTjx+fWwGSKXGIctfJ+n13V78J/v8/qTuNN5efNhzEmz2me10VhC+qvoNWz+kTrmDKRb
        1mcvpMf2VZI5SbOeTbPRavsE+8/g455KtHEhWfAi3v9J4CABvIQ//vntt78FDfyu/FOc5lRINiDMjjKb
        A/i31PdfiWTXfpRydBVfzrI024C5CjMSPwICkhmP8XZeDA3okkff8e/Usb2Qbl+fR5Be0VdJM7IZ/pX6
        rhqkWTPVu/so0ca/kZ4c/MJBAngJv/7znE7JHKVpM0qSDVRnp9+Y8XGLGSXp7o7H132S3jqLlIz4SjOf
        S9f7ApIZ5vGxepniJEmPqM89SK/rqyTP52X9Q/e7MJL1Md4pX9kZHYk2LiQb4+N9nwIOEsBL+PWfZ3VK
        NvC5RzPtmN/Hv4rT0o1iJDMGzja2evjJq5fe+C5S0viUZjqEzfVOsmi/9/m41X/pcfW5Bem1fZXk5ZQM
        G6uSZ8qXtZdscM8++94m3s+Dx7Rx6QkZLTlwkABewq//PLNT8jSo7hJpNqNu2gxZCski0XdNQYr5GYCk
        GSk5V1J8J0WaFcT4X+r7SkjekfWN4dWv7BjicfW5Ftsn2P9KpvRVkodTUnRGWpBOc9ik5du4ZI5ivM9T
        wEECeAm//vPcTmn4JVTpbjMRZtwNG4o12PeIWQPhDD4GIOlJ535EcXCVZjqE1WlT0kwDfag9S4+uz0dI
        r++rJI+ZFJfFCQzJq74fOmwSbVxITwlwxOAgAbyEzz/8p9PPonswlO4SjY2xAWLqTJIdX+SMSft+uzcb
        qW2uIHaQ3pRmd2jASLMMh6qBXTIHJN7Xm656b/uJR9fnErZtsN+dcO+rpNFV3dxSsCUPp6V6xULbNtjP
        k8e0cemp/ToOEsBL+Pzjvst919DcMUlnDAQjdK/AVIOUG4h3qYuS3as7vNPx8c6G9OR89ZCqFBhplpFc
        FWSw7YJ9ZtFlZEiPr885pKX6Kmm0nns7bKPBw+p0cGn5Ni49dblvHCSAl/D5x/Oj8U2rK0lPeIl7Socr
        5Z51cSCXzCG5cqbx4xlLT85XD6kyMKVZKTiHK0xJZ93r5ncLbZ9g/5BH1ecc0lJ9lTRSz/+bOuYI0uj9
        r57RkpZv49LMVMOZ4CABvITPP9S4g4b+RFp+a8Fz+dLZeOf452Zdqg0L6YpVD5OzLNKslJQzqR5YpRkG
        /eGzl87qH5qW/JZeVZ9jpOX6KmnEUG+qPzVIo/WjNXi3dBuXnhr4wkECeAmff+QNjSdRm7Iymk5o7zrY
        YLIxMwrtNuBLNvDkzvWvqX1ySBblOzOynRx8pDe8h1RtQEkzUmFrjKezHNEWx+Z19TlGWrWv6j1PtwUa
        NiS7b/H3tNCU8ict38almfV0FjhIAC/h84/nTmuHHL4MK/VGp74MjdQxN+zz7+3ifUdpMvZySLlIaPVL
        xDGSOdazB1YbLJNGhvTUfPUf4msqIY0aa0ni7wmRzuwbWhyk19XnENvme/tW3tBX9Z5bc4rmEdJQm4uP
        d4S0fBu3bYLtnwIOEsBL+Pzj/i8C11IcoKWembKmQVfyHuCGI7NSKVWn6wcrQ+wYYpZhmc3hl57u2DcZ
        89KUmd74e0KkmvpsBs1P25N6Z/aq7of0yvocYtsF+9Ty+L7KkHrvvbuRKo0EYaod/g1p+TYuPeG9uxgc
        JICXsC/YN/gncvQCaGun3mVsSd7vDgzl90ulAcdt1SfJrtvznY7D+x9t34MN/GYgGIf3WTIDxrb1SO9r
        SgmSpgQy4u8JkY6MVbt/uzok9Rh6VQa2bRfsE/Po+rwhLdlXGVKvgfwGB2n5Nm7bBNs/BRwkgJewL9g3
        eG+s09sM0VpjdNvWOuj4eCmKA5LUkt89lK4heUYCuztfqWQATVtOXLLn1ptPbwN27SpftXUjxgxQD2PO
        nvNpBp3knp8ff8eGVJPmlX1OUqtzUWM8vbo+b0jL9VUb0rIOkiGt3sY9gxKGtd1kdsn3Zxvxfi3gIAG8
        hH2Bf6dsnZx1Oi4RXcnSqWqMhuz3SbWpG10DW4zkMctgjLxXUTI2TunUJTNqt0Eo59BYuX3e9B6D1Gq0
        Wh0YdoxipB4js/lHLaXaOlxN/B0b0tE1FWfApNZo+OGMmvTq+rwhLddXbUirO0irt3EvB8nGhmb7Q9ra
        dotNhIME8BL2BfmBvgXr2Nx+yTyFZMZJqeMqvbNSe40unZ1UWmmrlaYItCEdDV7Nx7wbUoth5/KORA6p
        NLuRoueZ9s5iZIm/Y0M6urc1s8Atxl6x3Umvr88b0lJ9VYi0uoO0bBs3JA9n3WU2WbJ2Yc7S0TNxr3sA
        cA37gjEHyToQt9z/IySbTcoN5tmOSqq9RjdDS/KKzDZ3wFLxu+Ptn4hkdW93bQns2U+vo1K1QRXvW4Pk
        VZ82sr/JI5UMn6r3p6QWY6/4Ho30+vq8IS3VV4VIqztIy7ZxQ6rt00u4ZwkYktWH1PPBQQJ4CfuCPgfJ
        ZoxOc4xCpNzAVXKQagdet2uSWmcVclQNViFSKSI8nApzB6Ta1Laul9h7kGrqWa/x5GE8hGTPQyrVn6rU
        MaklXaZo7Euvr88b0lJ9VYi0uoO0bBs3pNHr77rvrUg29ti5GpfYQQDgz75AnYrYOpgjbFu3yGUPUi4l
        JDs422fBdlni/UaQal6CraHJAJSOjJ2p6WZnIdUs9X3KgLkh1RiaXfdfGjHYUiTPQyrd1+r7KbUYT1kj
        Q1qiPm9Iy/RVMdLqDtKSbXxDeoSDBADvZF+gTiXoYEpMWymqFSk1kJYcpNqO1zUaJPXMzu2Ij1tCOkrT
        GIry3gWpxqg7Pf1BKkVmja52JHlF+TeS5yGVZuaqV02TatNvika1tER93pCW6atipNUdpCXb+IaEgwQA
        l7EvqBsYb2WESKmBNNuxSzWzDYbrQhOS16pE1XnV0tHzfI1BGV1XitNnO6WjqGrX0sySt/GUrAdSyUip
        XplNqq37xfooLVOfDWmZvipGwkFKH6+XR7TxDQkHCQAuY1/wQANESnXMxUFSOt0RlHoH/JjanPAa4+o1
        BqV09ExPzw+Xjgb5LmNO8v4hyeR5SLmocPaF7xipJWUrez+kperzhvT6viqFtLqDtFwbD7Htgn16wEEC
        gG72BeXB+JYvQEupNKZiJ2yfB9uWcFsFR/IyOqoWGpBqrvFNDlIpgnnJYCkdLR7RtWiE5G08Jc9Dyt3T
        6tRAqXYBDSM7yyctVZ83pNf3VSkkHKT08Xq5fRsPkXCQAOAy9gVlB2nKkpkjSLmOuZhyIlnEqyYy6+YU
        Sl5GR20Erual2Tc5SKX7e5WDdJQmcxcHKRnpl3LvUFUboVLL8r+lBRqWqs8b0uv7qhQSDlL6eL3cvo2H
        SKMOknF61gAAvIN9QX4gdh90PJBy0a+aZURr8/tdjC7pbAepNKOy0bVIwB2xawmuK+aS1c2kIwepKwVJ
        8jaedsEPqZQ2UxsFbjnPowUalqrPIdKr+6oUUu85FOuAZPXajO+NeP8ULQ5AzF0cpNu38RDJw0HqescT
        AGBfkHeQbheJkbIR5XjbHFJtZHDY8JDOdpDi/VK8ZllkqTTDgIOUJ/mugZQzylveTaiZ9dkoGjPRtjle
        tcx3iPTaviqFNHIOttph6AQZNQ72DO7gID2ijYdIHg6SYfXoox5KlnkS148fwm0BYE32BWkHaReRk6xT
        tG2tQ6mKNHkh2cBRGjybUk0ku4b4GCnsO7sdxe/942P2cGgASbWD62vytKXSEtB3TbHrSlu1/YJjjJJs
        L1LOIK9yQqTWc8ymG0rL1ecU0uv6qhyS1zlczR0cpNu38Riptq7PwmU2FgCeyb7gD6cn7CSMOPqSizqZ
        02Sd2pR3lSRLBzj6HRSjeVpdqo3O2v3pjfqf6SBVLxEb7/tUpNKAWh0R9UQ6qld3cJCS9UnKtbWq9iW1
        1vdsoEVarj7nkF7VV+WQcJDSx+vh9m08RrraQTJembILAMfsC9IO0scgK9UO0JbSYJ2c0TtQmzNm+7d0
        xL3fZUZY6vpTNA/80mlGh1T7jIwpDu3ZSEcD6ulpotKRQ38HBymZUiLl3rs4/M0dqdqh+abowErL1ecS
        0mv6qhzSGQ6S3cNtjIpJbd/DHRyk27fxGMnzGYzg+htjAPAM9gXpQffD4JA8Oq7QeYqpHfhTDM8USLU5
        1bb6T0vKwJkOkt3HeL8crxgApKNrPv06peJ7D/H2tUitxkmJ5H2Rcu3wMAostbbhowUalqvPNUiP76ty
        SDMcpG2MOQyWSC3v1pTodZCWauMxUkubbyG0PWqecXNGCgA8n31ButOb4SDNwqUzk2zmqnblIjM+Dgdd
        6a4O0isGAOnomk+9Tqm0QtQX8T61SJ7G067eWlnwechhAELq6R+Kz0Zarj7XIj26r8oheZzDZgw3zSra
        9iK3/HUrd3CQbt/GY6Se78hhM/k5J/HoPi/VnwDAH+wLnu8guabXSGZ8tEQSbVBPRmq/P4u378HbQWqK
        7N0V6SgNa3h2sQXpMC0s3qcWqeWHGUsk74mUe8/waKbHjK4ew7K4cpR9Hmx7xCvqcyvSI/uqHFLvOWxO
        0eEsUYhk98/2G1nSO0Wvg7RUG4+x7YN9e7B6cDhratt8b5+jeuYVAN7DviDtIH1Mt0st7wOcydQXKiXr
        sGvTCqxz/higpTMdpNb0kCZj4o5INfXytPQr6fB5x/vUInm1wWSbkXLHL9Y9qWYRlRTF9wal5erzCNJj
        +qocUqujYtdcHSCTzNC3fVrrViu9DtJSbTxG6nWQrN4cfpdtI46uxdrQ0n0JwKrsC9KD6kdnI3lFtrzp
        WpyhFWmLNB5F0T4GGunODtLj39uQagyKU34nR6p6wTrerxap13iISaaPWHmwTUg2CiyNvFReNEKk5eqz
        B9Lt+6ocUo0h/jVblNo/hWR11O5HrfPoQa+DtFQbj5Far9/6iOK7U9L2/GtmwGyb6lX3AOBd7AvSA8fH
        FLOUy12+ku6BeARpM0Di8zE+UhukMx2k1sHl8cuZSrUR1+mOtFRl0Mf71SJ5Rb1zefm56H3W8ZB66/eM
        dx5YnjdCumVflUMqBeLs/KrasbTNFPU6ReaEjaTd9TpIS7XxGKk2EGvXceQY2fO35xjvm8OO6ZquDwDP
        Yl+QHkR2ESWppbOZjUV6Lu/MpHjA+cjllu7sIBmPTiWQah2kqc60VB1ljfetRRox2EKSz1zKGZPJdiaN
        vFB+aEBKy9XnmUi36atK2P7BsaxOWj2o6uslM7B728nXzJT4qkPSSLpbr4O0VBuPkY76UaujWcdIsv1b
        0wHtuZ+SiQIA92ZfkO40d9FYqbXjmUnTy58zkCxKGTuNH+cl3d1Buvw+jmDnH1zLEdNSJ6TqyG+8by2S
        R4Ai9/J2boY4GwWWRur2YdqjtFx9noV0q77KG8nqSk0KVYzt8+MURce8wkFaqo2nkFJOotkopVkumylt
        dS6tz8YxAoAf9gVpB2m3qo00kovsyaWpNJJFKVPO4m5AsLLg8xFqHKSeAd0MhMdG3aUWI3rKu0hSU7uI
        969F6jEAY3Ivb+cixcnVraSRyLJx2Ial5eqzN9It+yovpB4n2rBrzRrchnSFg7RUG08hbemRm/Pq7Rgl
        HWIAgH1B2kEyUlE1rxzpXuxcT+3c7PuEdaqla7fIX+p+nekg9Q5oj42627kH11GDe8RQam0TXamh0TF6
        ST5rKw+2CUnWO2k0FYj6PAHpEX3VKFKv82L1tmomWbrCQYqP08Nj2ngvktXzln73y9lKHQsAYGNfkHeQ
        dpEb6cpZJOvkTnnvSLLIqw0oNRG9bKRMOtNB6n02do2PjKhJrQ5Sl+GSQ+ox4pvrsO0T7D9C0kGUqle3
        kjzOhfrshPS4vqoXyWYMetLQbJ+m4Ih0qoMkLdfGe5DsudTUdcO2wzECgCr2BXkHKTdV32qUemAd3dTl
        NyUzNFpnA4qdr3Sq0RHt00JXOsTVSD3vxbn9CKDUY6z1OEij6S4bScdByl1HKkji0f6pzwNIj++rWpF6
        611Xe7f9gmO00uMgLdnGa5Fs1qiljuIYAUAT+4K8gzTr5c1W7PymOEdSmO8cf2+JqnOSznaQegz2jWJO
        /h2RWo1Ew5718AyD1GtANaf5SSPG2kbyXQNDytX/nTMntbaVFNTnRqRX9VUtSD3pXkPjhnS2g7RkG69B
        Muex9pysHp+SaQIA72Jf8MdAEnYwIUkjQ7LBesR4qcU6O/d0GclSCHqMa8Ouu+qcpLMdpN5rMmwAmjpL
        543Ue73JH1KsRbL632tE9DhIHhHd3I9HZtNpEtvazMVuuw6oz5VIr+yrapF6zqv6unNIZztIS7bxI6SW
        5+Ba9wBgLfYFZQeplLPeOuXdilsqVIg0YnQ1rYRm2wf7jlBrUI4OslYXHhN9k0bu70h0uSe1b6O5Xksj
        dXYj+b1SziBKrWTpcR4G9bkC6bV9VQ3SJc6RIZ3tIC3ZxktILe0/O3sGAFDDvqDsIBlFA0PyiHyFWDqF
        u1Ej2SAxkjrQvEy07RPsP0KtQWkvMcf7tnK5USlt96042yKNzGJ2Lfstjb7A3JwbL3nUo6RDKOXa7y44
        Io20n5Cqey8tVZ83pNf3VUdIPUEIu2cuz1o620Faso3nkFrtilel1ALA+ewLjh2kQ4NOMqNxeFlQMSUl
        RhqJ+Bt2j5qjktKIAR9SbXRIR8+zBjvG6elJUjwrWXzZXhq91uZBVRo1ZHocpNHrLL1PmIsYf5yn5OGs
        bFRHe6Vl6rMhLdNX5ZB607zcsg7sWMFxW+lxkJZt4zFSz3k0py6PIFn9MCfu0uALAPixLzjumC2iVJvH
        bo6SdRq1nb113M0GYwuSR2Suq/OVvKJxLQ7SqIEVclpUTrK6ExtpxShktG0PTYaM5LHSVLMBKY3Wo1Kq
        bK59fDx7acRgjMkaczHSSvV5qb4qhdT7ft/QjEWMdLaDtGwbD5Hs+fc4i1PtiA3J7lF4fqd8LwDMZ19Q
        1xl1dQKSGZTmMIWcFsmVPAyOroFX6o2CpmhxkLyWi92YkvIYIuUG5uy9l2wgjbfvodqglDzq0+EsQojk
        cZ3Z9ivlDLOPdip5OipGbdBllfq8XF+VQrIxIj5mDa7vrNrxgmO30hp4WbqNh0gj5zDFWZG2wG/8fQYO
        EsBL2BfUOUjWwT5qKlnyetm0a+CVvL7faDI6pJ4I3BE2cDUPeCUkM35LhmHJoPRKB6kyKiUbJON9e2hK
        PZE8rjM5cyJlDbPEtqMptDHVgRLp1fVZWravipF6ZlJsH+9neaaDtHwbNySPPtba33C6nWRBA3OKjuoj
        DhLAS9gX1BsfQwPfmUgjg1tM84yX5GVMb7Q6SL1R2BrMmBpKVZLs+dREzLPXLXlGvQ+fseQVXW1KPZE8
        ZlCS1yfljp1a3crrHZWNamNeem19lpbuq0Kk3jbtvoKZdKaDtHwbNyTPdm6OjR3PyDrP9lmwndHqoOMg
        AbyEfUFbdLZ5AD4byTq8nihkjuaZM8kzImu0OkgeKRs1WMTxa2BJnceGZMaGbdcaocwe1z4Lthvl8HeR
        JM86VR3tloYN6PiYG1LuHu7SACXvWZzq36KSXlmfpeX7qhCpt013f2cO6UwHafk2bkgzZopng4ME8BL2
        BW2dknukzhupd5DN0eQU2vbBvl40GwC2T7D/U8lG9iXPfPnirI7kOVtlVNcpadR4Kq1ulTPwd4N+9LkH
        ramGr6vPEn1VgO0bHKcFdyNVepKD9Pg2Ls2oi2eAgwTwEvYF+wZ/xK07BMkzImu0RrpDh9PrXHocJO/U
        mSvIRsSl1uj9EVnjUvL+ruqULmnUiM4aa1Kufu5SY6LPPWhNNXxdfZboqwKkmjTFFE93kJZv45J3EOos
        cJAAXsK+YN/ga7hlqp2dV3COnlSlrkihIW0Dk5dh3WV02H7BMZ5GMfponwfbepA1LiVvQ7Z6ULVtg/16
        yC0MUGoru/Ydfe5F64zHa+qzRF8VIeEg9fH4Ni55z6aeBQ4SwEv4/KM/KnvLVDtpNFUhx+H1SrGBYR2+
        l0HX6yDZ8/U27s+iGA2PtvUg+YylGYZs9fOUZhlPpRTFj3ek7O/gM0+ajAvpNfVZoq+KkHCQ+nh8G7ft
        gn2eBA4SwEv4/GPM+KtO5zgLaWYnW4rSxbMZZsTZgNM74Mc0/XZOiPTUgScbebTPgu28SKaDSDMM2eoA
        gzTLeMq9e7gz7qRZxlNzoEV6RX2W6KsipN5ZYfexSBpq9/HxSkjLt3Hpqe0aBwngJXz+Mb686NDyuN5I
        sztZG3DsOzZyaSlfnaaUG6BaaTYkQ2z/4FhPIDngb0izou+ptBPPxSB+iL8nhzR6rbt7KZXafdLAjbbx
        pPn3a6TH12eJvipC6j2H7lmrHNLo8zlzpcrHt3FpVp8+GxwkgJfw+cd4p2TRx6oc4zOQZhsdNXxF5yTv
        iFyzIbkhPe0F9+IP/UlTnBaxc/glr8h6TG1u/uhsWSpaXLqm5IAfbeNJ84+bSo+vzxJ9VUR0jBaKAZUe
        pNE+pnpctG2D/Xp4fBuXZmQFnAEOEsBL+PzDZ5C2qF+38e6JdIeVcL4GRsn7XIZm66Q7GGQ1HKboSLNm
        EHaDneQVWY+pHlil0fduftqndFQvk21ZmnUfuoxb6dH1WaKvCpBGDOSdgzCKNLpoRdM9kJZv49LoPbgC
        HCSAl/D5x/ggsOEewetBmpVHXctPLrzkveJWd27/hjRr5sULGyCLq3BJM5/x7l2G6HNPqp+nbRvs18PX
        dUmWdlMyQrLt2D4LtvOmauW1GOmx9VmirwqQRp001yCdNGqsN70XJS3fxqUnrlKJgwTwEj7/8I3Eu+eB
        9yDN7ORL/OTeS2b8jA6wKboMyRDpqvtTw+FgI82MvO/qcPS5Jy2/ETL6rmAt2dRGaaYz0m1kSI+tzxJ9
        1TfSaP1yex9W8kjhbHoXS1q+jUtPS501cJAAXsKv/8yJYF7eWUhXvOz5kWYozUr/GZ5FMqQ7GpVVDrY0
        cxA/00EyWt5TmP3MirPA0kzHtOlHY2OkR9Znib7qG+nUGZsSktc9aZrVkpZv49LTZpFwkABewq//zOsM
        m1+69kaalUudwgb2n2ip/f+7LN7OC5cOWbqTUVmdoinNXMHsbAep+llKsyPMxYi/NDslbKjfkJ5an5fv
        qyQPR9GuwyXNTvLqY5r6amn5Ni7ZOZzZJkbBQQJ4Cb/+MzcSf6mTJJ2VrmCD8s8sgGSd+xlLEBdXeatF
        8noHbYQWY3J2CsbZDlJrGs6sNlvVXqWZ9WX4RXvpUfXZkJbvqyQvg3jYWJU8n0ez0yYt38YlW7BjpuPu
        CQ4SwEv49Z/5URoXI74XaaYDaNj9C6OxZxkcGy4599KVq4FVpdVtSLPPdZemE30+g+o0O0PynimpHuCl
        2Uvxehi4j6nPG9KyfZXk+byGZ5Ek73GxuU5Iy7dxyYJhs20UD3CQAF7CH//M7wQN96VXW5Fm5TPbABbm
        8VvU8YrO3KJ9w2klktWHMw0mo2cp4Nn3eDfYSbO/80oDqucZzDbmi2lANUiPqM8h0nJ9lTRjHOp+T1Oa
        Vbd72hltXEh3fycJBwngJfzxz3mdzrCxM4rk3dl/dIjSGc5mia6odQrpjOi7GUrN9UI644X2XRqKdIah
        3XM/Rp6VGV9NM1ch0kwDqintsIR02/qcQlqmr5JmzhA0G63SzAUKjOb2JtHGhWR1ZbbT1gsOEsBLMJ01
        SJphOTy74YFkg99oTnPSEJKu7rib3nmoQZphWNqA3ZV2Kc1+mXxjd36SPfd4O2+6ot6S3ZeWYIc9g6GZ
        jg3JZiKmzXqkvrMX6Vb1uYT0+r5KOiN9qjpwJJ3hSNsz7XGSaOMBkgXK7HnZdcbHvAIcJICXkCxcBevM
        RKvxYcZG1hCSbACz416FS/Q6xffxRwciM8q6I5lQh7QZDklS+6zG9714RH2W7Fzpq+AHiTYOADCJZOFq
        SBYZs0ElNztgRhADToDdj29KEUUz6LbtcIrgtgT19Nb1WaKvAgAAmEyyEAAAAAAAYEWShQAAAAAAACuS
        LAQAAAAAAFiRZCEAAAAAAMCKJAsBAAAAAABWJFkIAAAAAACwIslCAAAAAACAFUkWAgAAAAAArEiyEAAA
        AAAAYEWShQAAAAAAACuSLAQAAAAAAFiRZCEAAAAAAMCKJAsBAAAAAABWJFkIAAAAAACwIslCAAAAAACA
        FUkWAgAAAAAArEiyEAAAAAAAYEWShQAAAAAAACuSLAQAAAAAAFiRZCEAAAAAAMCKJAsBAAAAAABWJFkI
        AAAAAACwIslCAAAAAACAFUkWAgAAAAAArEiyEAAAAAAAYEWShQAAAAAAACuSLAQAAAAAAFiRZCEAAAAA
        AMCKJAsBAAAAAABWJFkIAAAAAACwIslCAAAAAACA9fj9t/8H7YgT75Hg2t0AAAAASUVORK5CYII=
</value>
  </data>
</root>